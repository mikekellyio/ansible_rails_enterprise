###################
# Install openssl #
###################

###################
# Requirements:   #
# * gcc-c++       #
###################
- { include: set_src_vars.yml, package: "{{src.openssl}}" }

# Detect ncurses
- stat: path={{STOW_PATH}}/../bin/openssl
  register: openssl_bin
  changed_when: openssl_bin.stat.exists == false

- name: Create openssl src directory
  when: openssl_bin.stat.exists == false
  command: mkdir -p {{SRC_PATH}}/{{src_folder.stdout}} creates={{SRC_PATH}}/{{src_folder.stdout}}

- name: Copy openssl src file to remote node
  when: openssl_bin.stat.exists == false
#  unarchive: src={{LOCAL_SRC_PATH}}/{{src_file_name.stdout}} dest={{SRC_PATH}}/{{src_folder.stdout}}
  copy: src={{LOCAL_SRC_PATH}}/{{src_file_name.stdout}} dest={{SRC_PATH}}/{{src_file_name.stdout}} owner={{sysadmin}} mode=0644

- name: Install openssl
  when: openssl_bin.stat.exists == false
  shell:
    "{{src_bash}}
    cd {{SRC_PATH}};
    tar -xzf {{src_file_name.stdout}};
    cd {{src_folder.stdout}};
    ./config --prefix={{STOW_PATH}}/{{src_folder.stdout}};
    make;
    make install prefix={{STOW_PATH}}/{{src_folder.stdout}};
    cd {{STOW_PATH}};
    stow {{src_folder.stdout}};
    creates {{STOW_PATH}}/../bin/openssl;
    "

- name: Verify openssl installed properly
  shell: "{{src_bash}} openssl --version"
  register: openssl_version
  changed_when: openssl.rc != 0

- name: Display OpenSSL Version
  debug: msg="{{openssl_version.stdout}}"
