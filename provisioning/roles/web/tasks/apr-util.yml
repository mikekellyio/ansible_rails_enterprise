###############
# Install apr #
###############

#################
# Requirements: #
# * gcc-c++     #
#################

- { include: set_src_vars.yml, package: "{{src.apr_util}}" }

# Detect apr-util
- stat: path={{STOW_PATH}}/../lib/libaprutil-1.so
  register: apr_util_lib
  changed_when: apr_util_lib.stat.exists == false

- name: Create apr-util src directory
  when: apr_util_lib.stat.exists == false
  command: mkdir -p {{SRC_PATH}}/{{src_folder.stdout}} creates={{SRC_PATH}}/{{src_folder.stdout}}

- name: Copy apr-util src file to remote node
  when: apr_util_lib.stat.exists == false
#  unarchive: src={{LOCAL_SRC_PATH}}/{{src_file_name.stdout}} dest={{SRC_PATH}}/{{src_folder.stdout}}
  copy: src={{LOCAL_SRC_PATH}}/{{src_file_name.stdout}} dest={{SRC_PATH}}/{{src_file_name.stdout}} owner={{sysadmin}} mode=0644

- name: Install apr-util
  when: apr_util_lib.stat.exists == false
  shell:
    "{{src_bash}}
    cd {{SRC_PATH}};
    tar -xjf {{src_file_name.stdout}};
    cd {{src_folder.stdout}};
    ./configure --prefix={{STOW_PATH}}/{{src_folder.stdout}} \
      --with-apr={{STOW_PATH}}/{{src.apr['name']}}-{{src.apr['ver']}};
    make;
    make install prefix={{STOW_PATH}}/{{src_folder.stdout}};
    cd {{STOW_PATH}};
    stow {{src_folder.stdout}};
    creates={{STOW_PATH}}/../bin/apr-util-1;"

    # Verify apr-util installed
- shell: "{{src_bash}} apu-1-config --version"
  register: apr_util_version
  changed_when: apr_util_version.rc != 0

- name: Display apr-util version
  debug: msg="{{apr_util_version.stdout}}"
