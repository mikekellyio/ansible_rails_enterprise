####################
# Install Apache 2 #
####################

###################
# Requirements:   #
# * gcc-c++       #
###################

- include: apr.yml
- include: apr-util.yml
- include: pcre.yml

# Detect httpd
- stat: path={{STOW_PATH}}/../bin/httpd
  register: httpd_bin
  changed_when: httpd_bin.stat.exists == False

# Upload & extract source
- { include: upload_src.yml, package: "{{src.httpd}}", pkg_check: "{{httpd_bin}}" }

- name: Install httpd
  when: httpd_bin.stat.exists == False
  shell:
    "{{src_bash}}
    cd {{SRC_PATH}}/{{src_folder.stdout}};
    ./configure --prefix={{STOW_PATH}}/{{src_folder.stdout}};
    make;
    make install prefix={{STOW_PATH}}/{{src_folder.stdout}};
    cd {{STOW_PATH}};
    stow {{src_folder.stdout}};
    creates={{STOW_PATH}}/../bin/httpd;"
  register: httpd_install
  changed_when: httpd_install.rc != 0 or httpd_bin.stat.exists == False

# Verify httpd installed
- shell: "{{src_bash}} httpd -v"
  register: httpd_version
  changed_when: httpd_version.rc != 0 or httpd_bin.stat.exists == False

- name: Display httpd version
  debug: msg="{{httpd_version.stdout}}"
  failed_when: '"{{src.httpd.ver}}" not in httpd_version.stdout'

- name: Create sites-available & sites-enabled directories
  file: path={{item}} state=directory
  with_items:
    - "{{httpd.paths.sites_available}}"
    - "{{httpd.paths.sites_enabled}}"

- name: Setup Default Port in httpd.conf
  lineinfile:
    dest={{httpd.paths.httpd_conf}}
    backrefs=yes
    state=present
    regexp="^Listen 80$"
    line="Listen {{httpd.port}}"
#" #TODO: Remove author's hack for vim syntax sanity

- name: Setup vhosts Include
  lineinfile:
    dest={{httpd.paths.httpd_conf}}
    insertafter=EOF
    state=present
    regexp="^Include {{httpd.paths.sites_enabled}}$"
    line="Include {{httpd.paths.sites_enabled}}"
#" #TODO: Remove author's hack for vim syntax sanity

- name: Replace SSL configuration file with populated version
  template: src=httpd-ssl.conf.j2 dest={{httpd.paths.conf}}/extra/httpd-ssl.conf backup=yes

- name: Symlink server-ca.crt to CA-bundle.crt
  file: src={{httpd.https.ssl.CA_cert}} dest={{httpd.paths.server_ca}} state=link force=yes
