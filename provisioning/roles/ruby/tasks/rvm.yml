# Detect RVM's presence
- stat: path={{HOME.stdout}}/.rvm/bin/rvm
  register: rvm_bin

- name: Install User RVM normally
  when: rvm_fw.enabled == False and rvm_bin.stat.exists == false
  shell: \curl -L https://get.rvm.io | bash
  register: rvm_installed
  changed_when: rvm_installed.rc != 0

- name: Install User RVM via RVM::FW
  when: rvm_fw.enabled == True and rvm_bin.stat.exists == false
  shell: \curl {{rvm_fw.url}}/releases/rvm-install-latest | bash
  register: rvm_installed
  changed_when: rvm_installed.rc != 0

- name: Download Custom RVM::FW Config File
  when: rvm_fw.enabled == True and rvm_bin.stat.exists == false
  shell: wget {{rvm_fw.url}}/db -O ~/.rvm/user/db
  register: config_file
  changed_when: config_file.rc != 0

- name: Download Custom RVM::FW Known File
  when: rvm_fw.enabled == True and rvm_bin.stat.exists == false
  shell: mv ~/.rvm/config/known ~/.rvm/config/known.bak && wget {{rvm_fw.url}}/known -O ~/.rvm/config/known
  register: known_file
  changed_when: known_file.rc != 0

- name: Ensure RVM is sourced in .bashrc so it's detectable by Ansible shell module
  lineinfile:
    dest={{HOME.stdout}}/.bashrc
    regexp="{{HOME.stdout}}/.rvm/scripts/rvm"
    line="[[ -s '{{HOME.stdout}}/.rvm/scripts/rvm' ]] && source '{{HOME.stdout}}/.rvm/scripts/rvm'"
    state=present
    insertafter=EOF
    create=True
