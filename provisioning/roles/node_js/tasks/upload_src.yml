# Set src filename
- name: Set default src file name
  shell: 'custom={{package.custom_file_name != False}};
    [[ $custom = "False" ]] && echo "{{package.prefix}}{{package.name}}-{{package.ver}}{{package.suffix}}.{{package.ext}}" || echo "{{package.custom_file_name}}" '
  register: src_file_name
  changed_when: false

- name: Set default package folder
  command: echo "{{package.prefix}}{{package.name}}-{{package.ver}}{{package.suffix}}"
  when: package.custom_folder == False
  register: src_folder
  changed_when: false

#- name: Create {{package.name}} src directory
#  when: pkg_check.stat.exists == false
#  command: mkdir -p {{SRC_PATH}}/{{src_folder.stdout}} creates={{SRC_PATH}}/{{src_folder.stdout}}

- name: Copy {{package.name}} src file to remote node
  when: pkg_check.stat.exists == false
  #unarchive: src={{LOCAL_SRC_PATH}}/{{src_file_name.stdout}} dest={{SRC_PATH}}
  copy: src={{LOCAL_SRC_PATH}}/{{src_file_name.stdout}} dest={{SRC_PATH}}
  changed_when: false

- shell: 'bz2={{"bz" in package.ext}};
  [[ $bz2 = "True" ]] && echo "-xjf" || echo "-xzf" '
  register: tar_flags
  changed_when: false

- name: Extract src file
  when: pkg_check.stat.exists == false
  shell: "cd {{SRC_PATH}};
    tar {{tar_flags.stdout}} {{src_file_name.stdout}};
    cd {{SRC_PATH}}/{{src_folder.stdout}};"

- debug: msg="Source file => {{LOCAL_SRC_PATH}}/{{src_file_name.stdout}}"
